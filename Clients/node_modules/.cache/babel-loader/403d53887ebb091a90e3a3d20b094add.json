{"ast":null,"code":"var _jsxFileName = \"/Users/university/Documents/SIT313/Tasks /Task 10.2 /client/src/components/Find.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport Task from './fTask';\nimport TaskModal from './TaskModal';\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TaskList(props) {\n  _s();\n\n  const {\n    searchTerm\n  } = useContext(props.ContextContainer); // modal handling\n\n  const [show, setShow] = useState(false); //const [index, setIndex] = useState(0);\n\n  const [modalData, setModalData] = useState();\n\n  const handleClose = () => setShow(false);\n\n  function handleShow(id) {\n    // need to use id not index, so need to pass in id then return\n    let tmpData = props.data.filter(function (task) {\n      return task._id == id;\n    });\n    setModalData(tmpData); //console.log('id called: '+JSON.stringify(tmpData));\n    //setIndex(index);\n\n    setShow(true);\n  }\n\n  ; // end modal handling\n\n  if (typeof props.data === 'undefined' || props.data.length == 0) return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 74\n  }, this);\n  let tmpData = props.data;\n  const filteredTasks = tmpData.filter(task => {\n    //console.log('searchTerm: '+searchTerm.term+\" : \"+task.expiry)\n    if (searchTerm.criteria == 'title') {\n      return task.title.toLowerCase().includes(searchTerm.term.toLowerCase()); // filter based on title\n    } else {\n      console.log('use expiry');\n      let searchDate = new Date(searchTerm.term);\n      if (!searchTerm.term) searchDate = new Date();\n      let expiryDate = new Date(task.expiry);\n      return expiryDate.getTime() >= searchDate.getTime();\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row workerTask\",\n    children: [filteredTasks.map((task, index) => /*#__PURE__*/_jsxDEV(Task, {\n      id: task._id,\n      type: task.type,\n      title: task.title,\n      description: task.description,\n      expiry: format(new Date(task.expiry), 'dd/MM/yyyy'),\n      handleShow: handleShow,\n      handleDelete: props.handleDelete,\n      index: index\n    }, task._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(TaskModal, {\n      handleShow: handleShow,\n      handleClose: handleClose,\n      show: show,\n      data: modalData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 12\n  }, this);\n}\n\n_s(TaskList, \"FAN7BfjV9/WijyoN/7rzpIiUw8s=\");\n\n_c = TaskList;\nexport default TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"sources":["/Users/university/Documents/SIT313/Tasks /Task 10.2 /client/src/components/Find.jsx"],"names":["React","useState","useContext","Task","TaskModal","format","TaskList","props","searchTerm","ContextContainer","show","setShow","modalData","setModalData","handleClose","handleShow","id","tmpData","data","filter","task","_id","length","filteredTasks","criteria","title","toLowerCase","includes","term","console","log","searchDate","Date","expiryDate","expiry","getTime","map","index","type","description","handleDelete"],"mappings":"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","sourcesContent":["import React,{useState, useContext} from 'react'\nimport Task from './fTask'\nimport TaskModal from './TaskModal'\nimport { format } from 'date-fns';\n\n\n\nfunction TaskList (props){\n    const { searchTerm } = useContext(props.ContextContainer);\n    // modal handling\n    const [show, setShow] = useState(false);\n    //const [index, setIndex] = useState(0);\n    const [modalData, setModalData] = useState();\n\n    const handleClose = () => setShow(false);\n    function handleShow(id){\n        // need to use id not index, so need to pass in id then return\n        let tmpData = props.data.filter(function (task) {\n            return task._id == id;\n        });\n        setModalData(tmpData);\n\n        //console.log('id called: '+JSON.stringify(tmpData));\n        //setIndex(index);\n        setShow(true);\n    };\n    // end modal handling\n\n    if(typeof props.data === 'undefined'||props.data.length == 0) return <div></div>;\n    let tmpData = props.data;\n\n    const filteredTasks = tmpData.filter((task)=>{\n\n        //console.log('searchTerm: '+searchTerm.term+\" : \"+task.expiry)\n        \n        if(searchTerm.criteria=='title'){\n            return task.title.toLowerCase().includes(searchTerm.term.toLowerCase()); // filter based on title\n        }\n        else{\n            console.log('use expiry');\n            let searchDate = new Date(searchTerm.term);\n            if(!searchTerm.term)\n                searchDate = new Date();\n            \n            let expiryDate = new Date(task.expiry);\n\n            return expiryDate.getTime() >= searchDate.getTime() \n        }        \n    })\n        \n  \n    return <div className='row workerTask'>\n        {filteredTasks.map((task, index) => \n            <Task \n                key = {task._id}\n                id = {task._id}\n                type = {task.type}\n                title = {task.title}\n                description = {task.description}\n                expiry = {format(new Date(task.expiry), 'dd/MM/yyyy')}\n                handleShow = {handleShow}\n                handleDelete = {props.handleDelete}\n                index = {index}\n            />\n        )}\n        <TaskModal handleShow = {handleShow}  handleClose = {handleClose} show={show} data={modalData} />  \n    </div>\n}\n\nexport default TaskList"]},"metadata":{},"sourceType":"module"}