{"ast":null,"code":"var _jsxFileName = \"/Users/university/Documents/SIT313/Tasks /Task 10.2 /client/src/components/TaskModal.jsx\";\nimport React from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport ModalBody from './ModalBody';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TaskModal(props) {\n  //console.log(JSON.stringify(props))\n  if (typeof props.data === 'undefined') return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 50\n  }, this); // return empty div if data not set\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal.Dialog, {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        show: props.show,\n        onHide: props.handleClose,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [props.data[0].Task_type[0].toUpperCase() + props.data[0].Task_type.substring(1), \" Task:\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: props.data[0].title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(ModalBody, {\n            data: props.data[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: props.handleClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n\n_c = TaskModal;\nexport default TaskModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskModal\");","map":{"version":3,"sources":["/Users/university/Documents/SIT313/Tasks /Task 10.2 /client/src/components/TaskModal.jsx"],"names":["React","Modal","Button","ModalBody","TaskModal","props","data","show","handleClose","Task_type","toUpperCase","substring","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,iBAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAGA,SAASC,SAAT,CAAmBC,KAAnB,EACA;AACI;AACA,MAAG,OAAOA,KAAK,CAACC,IAAb,KAAsB,WAAzB,EAAsC,oBAAO;AAAA;AAAA;AAAA;AAAA,UAAP,CAF1C,CAE6D;;AAEzD,sBACI;AAAA,2BACI,QAAC,KAAD,CAAO,MAAP;AAAA,6BACA,QAAC,KAAD;AAAO,QAAA,IAAI,EAAED,KAAK,CAACE,IAAnB;AAAyB,QAAA,MAAM,EAAEF,KAAK,CAACG,WAAvC;AAAA,gCACI,QAAC,KAAD,CAAO,MAAP;AAAc,UAAA,WAAW,MAAzB;AAAA,iCACI,QAAC,KAAD,CAAO,KAAP;AAAA,oCACI;AAAA,yBAAKH,KAAK,CAACC,IAAN,CAAW,CAAX,EAAcG,SAAd,CAAwB,CAAxB,EAA2BC,WAA3B,KAA2CL,KAAK,CAACC,IAAN,CAAW,CAAX,EAAcG,SAAd,CAAwBE,SAAxB,CAAkC,CAAlC,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAKN,KAAK,CAACC,IAAN,CAAW,CAAX,EAAcM;AAAnB;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI,QAAC,KAAD,CAAO,IAAP;AAAA,iCACI,QAAC,SAAD;AAAW,YAAA,IAAI,EAAEP,KAAK,CAACC,IAAN,CAAW,CAAX;AAAjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAUI,QAAC,KAAD,CAAO,MAAP;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,WAAhB;AAA4B,YAAA,OAAO,EAAED,KAAK,CAACG,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;;KA3BQJ,S;AA6BT,eAAeA,SAAf","sourcesContent":["import React from 'react'\nimport {Modal, Button} from 'react-bootstrap';\nimport ModalBody from './ModalBody';\n\n\nfunction TaskModal(props)\n{\n    //console.log(JSON.stringify(props))\n    if(typeof props.data === 'undefined') return <div></div> // return empty div if data not set\n\n    return (\n        <div> \n            <Modal.Dialog>     \n            <Modal show={props.show} onHide={props.handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>\n                        <h4>{props.data[0].Task_type[0].toUpperCase() + props.data[0].Task_type.substring(1)} Task:</h4> \n                        <h5>{props.data[0].title}</h5>\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <ModalBody data={props.data[0]}/>                    \n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={props.handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            </Modal.Dialog>  \n      </div>\n    )\n}\n\nexport default TaskModal"]},"metadata":{},"sourceType":"module"}